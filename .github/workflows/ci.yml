name: CI

on:
  push:
    branches:
      - main
      - 'feature/**'
  pull_request:
    branches:
      - main
      - 'feature/**'

jobs:
  frontend-build-and-test:
    name: Frontend Build and Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
          cache-dependency-path: frontend/yarn.lock
      
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: yarn install --frozen-lockfile
      
      - name: Build frontend
        working-directory: ./frontend
        run: yarn build
      
      - name: Run frontend tests
        working-directory: ./frontend
        run: yarn test --watchAll=false --passWithNoTests
        continue-on-error: true
      
      - name: Run frontend security audit
        working-directory: ./frontend
        run: yarn audit --level=moderate
        continue-on-error: true
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/build
          retention-days: 7
  
  backend-test:
    name: Backend Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: backend/requirements.txt
      
      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
        continue-on-error: true
      
      - name: Run backend tests
        run: |
          if [ -f backend_test.py ]; then
            python backend_test.py || echo "Backend tests failed or not configured for CI"
          else
            echo "No backend tests found"
          fi
        continue-on-error: true
      
      - name: Check for pip security issues
        run: |
          pip install safety || true
          safety check --json || echo "Safety check completed with warnings"
        continue-on-error: true
